plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

group = 'pl.patrykpora'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.5'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.5'

    runtimeOnly 'com.h2database:h2:2.1.214'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


// this is for creation test data
// first need to create data.sql in resources folder then hibernate is reading from there
task generatePostsAndComments() {
    doLast {
        File dataSql = file("src/main/resources/data.sql")
        dataSql.write("")
        for (int i = 1; i <= 50; i++) {
            dataSql.append("insert into post(id, title, content, created) " +
                    "values (${i}, 'Test post ${i}', 'Content ${i}', '" + LocalDateTime.now().minusDays(100 - i) + "');\n")
        }

        for (int i = 1; i <= 50; i++) {
            int postId = 1 + i / 10
            dataSql.append("insert into comment(id, post_id, content, created) " +
                    "values (${i}, ${postId}, 'Comment ${i}', '" + LocalDateTime.now().minusDays(100 - i) + "');\n")
        }
    }
}